# docker-compose.yml

services:
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:8001
      - S3_DB_URL=http://s3_db:9000
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      - app-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - pgvector_toc
      - s3_db
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://user:password@pgvector_toc:5432/tocdb
      - S3_DB_URL=http://s3_db:9000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_DB=tocdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=pgvector_toc
      - POSTGRES_PORT=5432
    ports:
      - "127.0.0.1:8001:8001"
    networks:
      - app-network
    command: python main.py

  pgvector_toc:
    build: ./pgvector_toc
    volumes:
      - ./pgvector_toc/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql
      - pgvector_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tocdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - app-network

  s3_db:
    build: ./s3_db
    volumes:
      - ./s3_db/data:/data
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - app-network
    command: python main.py

networks:
  app-network:
    driver: bridge

volumes:
  pgvector_data:
